fm@fm:~/Documents/docker/imagenes$ git clone https://github.com/platzi/docker
				Cloning into 'docker'...
				remote: Enumerating objects: 66, done.
				remote: Counting objects: 100% (35/35), done.
				remote: Compressing objects: 100% (11/11), done.
				remote: Total 66 (delta 25), reused 24 (delta 24), pack-reused 31
				Unpacking objects: 100% (66/66), 34.16 KiB | 293.00 KiB/s, done.
fm@fm:~/Documents/docker/imagenes$ cd docker
fm@fm:~/Documents/docker/imagenes/docker$ ll
				total 156
				drwxrwxr-x 6 fm fm   4096 ago 20 17:05 ./
				drwxrwxr-x 3 fm fm   4096 ago 20 17:05 ../
				drwxrwxr-x 4 fm fm   4096 ago 20 17:05 avanzado/
				drwxrwxr-x 2 fm fm   4096 ago 20 17:05 build/
				-rw-rw-r-- 1 fm fm    196 ago 20 17:05 docker-compose.yml
				-rw-rw-r-- 1 fm fm    112 ago 20 17:05 Dockerfile
				-rw-rw-r-- 1 fm fm     93 ago 20 17:05 .dockerignore
				drwxrwxr-x 8 fm fm   4096 ago 20 17:05 .git/
				-rw-rw-r-- 1 fm fm     29 ago 20 17:05 .gitignore
				-rw-rw-r-- 1 fm fm    561 ago 20 17:05 index.js
				-rw-rw-r-- 1 fm fm   1072 ago 20 17:05 LICENSE
				-rw-rw-r-- 1 fm fm    662 ago 20 17:05 package.json
				-rw-rw-r-- 1 fm fm 101649 ago 20 17:05 package-lock.json
				-rw-rw-r-- 1 fm fm    240 ago 20 17:05 README.md
				drwxrwxr-x 2 fm fm   4096 ago 20 17:05 test/
fm@fm:~/Documents/docker/imagenes/docker$ code .
fm@fm:~/Documents/docker/imagenes/docker$ docker build -t platziapp
				"docker build" requires exactly 1 argument.
				See 'docker build --help'.

				Usage:  docker build [OPTIONS] PATH | URL | -

				Build an image from a Dockerfile
# crear una imagen localmente
fm@fm:~/Documents/docker/imagenes/docker$ docker build -t platziapp .
				Sending build context to Docker daemon  118.3kB
				Step 1/6 : FROM node:12
				12: Pulling from library/node
				f5196cdf2518: Pull complete 
				9bed1e86f01e: Pull complete 
				f44e4bdb3a6c: Pull complete 
				2f75d131f406: Pull complete 
				07dff4ad21eb: Pull complete 
				e0ac4f13b766: Pull complete 
				df2c3b2eb7cc: Pull complete 
				efe636eac583: Pull complete 
				fe17849545bb: Pull complete 
				Digest: sha256:01627afeb110b3054ba4a1405541ca095c8bfca1cb6f2be9479c767a2711879e
				Status: Downloaded newer image for node:12
				 ---> 6c8de432fc7f
				Step 2/6 : COPY [".", "/usr/src/"]
				 ---> 3dd26b61683b
				Step 3/6 : WORKDIR /usr/src
				 ---> Running in 4bd598b35a57
				Removing intermediate container 4bd598b35a57
				 ---> 86aabebeabd1
				Step 4/6 : RUN npm install
				 ---> Running in 0ac8f348d507

				> nodemon@1.18.6 postinstall /usr/src/node_modules/nodemon
				> node bin/postinstall || exit 0

				Love nodemon? You can now support the project via the open collective:
				 > https://opencollective.com/nodemon/donate

				npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.7 (node_modules/fsevents):
				npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.7: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

				added 287 packages from 588 contributors and audited 355 packages in 8.913s
				found 55 vulnerabilities (8 moderate, 30 high, 17 critical)
				  run `npm audit fix` to fix them, or `npm audit` for details
				Removing intermediate container 0ac8f348d507
				 ---> 46ea6dbd76d4
				Step 5/6 : EXPOSE 3000
				 ---> Running in d65f449e7031
				Removing intermediate container d65f449e7031
				 ---> 1105f6087809
				Step 6/6 : CMD ["node", "index.js"]
				 ---> Running in 4ec018bb76ae
				Removing intermediate container 4ec018bb76ae
				 ---> af53d1cd8376
				Successfully built af53d1cd8376
				Successfully tagged platziapp:latest
fm@fm:~/Documents/docker/imagenes/docker$ docker image ls
				REPOSITORY           TAG       IMAGE ID       CREATED             SIZE
				platziapp            latest    af53d1cd8376   8 seconds ago       931MB
				ubuntu               platzi    12d22e475260   About an hour ago   77.8MB
				jofmorenore/ubuntu   platzi    45f611d79888   5 hours ago         77.8MB
				mongo                latest    4130848d45a9   21 hours ago        697MB
				nginx                latest    b692a91e4e15   2 weeks ago         142MB
				ubuntu               22.04     df5de72bdb3b   2 weeks ago         77.8MB
				ubuntu               latest    df5de72bdb3b   2 weeks ago         77.8MB
				ubuntu               20.04     3bc6e9f30f51   2 weeks ago         72.8MB
				node                 12        6c8de432fc7f   4 months ago        918MB
				hello-world          latest    feb5d9fea6a5   11 months ago       13.3kB
# borrar el contenedor cuando se detenga
fm@fm:~/Documents/docker/imagenes/docker$ docker run --rm -p 3000:3000 platziapp
				Server listening on port 3000!
# en el navegador
http://localhost:3000

##################################################################################################################
fm@fm:~/Documents/docker/imagenes/docker$ docker image ls
				REPOSITORY           TAG       IMAGE ID       CREATED         SIZE
				ubuntu               platzi    12d22e475260   3 hours ago     77.8MB
				jofmorenore/ubuntu   platzi    45f611d79888   6 hours ago     77.8MB
				mongo                latest    4130848d45a9   22 hours ago    697MB
				node                 14        52e5cabe9b9c   2 weeks ago     914MB
				nginx                latest    b692a91e4e15   2 weeks ago     142MB
				ubuntu               22.04     df5de72bdb3b   2 weeks ago     77.8MB
				ubuntu               latest    df5de72bdb3b   2 weeks ago     77.8MB
				ubuntu               20.04     3bc6e9f30f51   2 weeks ago     72.8MB
				node                 12        6c8de432fc7f   4 months ago    918MB
				hello-world          latest    feb5d9fea6a5   11 months ago   13.3kB
fm@fm:~/Documents/docker/imagenes/docker$ docker build -t platziapp . 
				Sending build context to Docker daemon  118.3kB
				Step 1/6 : FROM node:12
				 ---> 6c8de432fc7f
				Step 2/6 : COPY [".", "/usr/src/"]
				 ---> 0379e1c4aa73
				Step 3/6 : WORKDIR /usr/src
				 ---> Running in cf30cfb12735
				Removing intermediate container cf30cfb12735
				 ---> b6af766e75db
				Step 4/6 : RUN npm install
				 ---> Running in 65450c7ef06c

				> nodemon@1.18.6 postinstall /usr/src/node_modules/nodemon
				> node bin/postinstall || exit 0

				Love nodemon? You can now support the project via the open collective:
				 > https://opencollective.com/nodemon/donate

				npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.7 (node_modules/fsevents):
				npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.7: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

				added 287 packages from 588 contributors and audited 355 packages in 8.632s
				found 55 vulnerabilities (8 moderate, 30 high, 17 critical)
				  run `npm audit fix` to fix them, or `npm audit` for details
				Removing intermediate container 65450c7ef06c
				 ---> 4930e2f46242
				Step 5/6 : EXPOSE 3000
				 ---> Running in 36c27fcfb33f
				Removing intermediate container 36c27fcfb33f
				 ---> 018e07acbcfa
				Step 6/6 : CMD ["node", "index.js"]
				 ---> Running in 82acca187135
				Removing intermediate container 82acca187135
				 ---> 0ed7fd2144e8
				Successfully built 0ed7fd2144e8
				Successfully tagged platziapp:latest
# en VS code: cambiar node:14 invalidamos todo el cachÃ©
fm@fm:~/Documents/docker/imagenes/docker$ docker build -t platziapp . 
				Sending build context to Docker daemon  118.3kB
				Step 1/6 : FROM node:14
				 ---> 52e5cabe9b9c
				Step 2/6 : COPY [".", "/usr/src/"]
				 ---> 559974fcb461
				Step 3/6 : WORKDIR /usr/src
				 ---> Running in 4d6c0580a671
				Removing intermediate container 4d6c0580a671
				 ---> 993d24ad670f
				Step 4/6 : RUN npm install
				 ---> Running in 9dbbd82d1bdb

				> nodemon@1.18.6 postinstall /usr/src/node_modules/nodemon
				> node bin/postinstall || exit 0

				Love nodemon? You can now support the project via the open collective:
				 > https://opencollective.com/nodemon/donate

				npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.7 (node_modules/fsevents):
				npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.7: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

				added 287 packages from 588 contributors and audited 355 packages in 8.773s
				found 55 vulnerabilities (8 moderate, 30 high, 17 critical)
				  run `npm audit fix` to fix them, or `npm audit` for details
				Removing intermediate container 9dbbd82d1bdb
				 ---> 3234ba9052a2
				Step 5/6 : EXPOSE 3000
				 ---> Running in a12341e6d9cf
				Removing intermediate container a12341e6d9cf
				 ---> b9075a355842
				Step 6/6 : CMD ["node", "index.js"]
				 ---> Running in 04c18dea078f
				Removing intermediate container 04c18dea078f
				 ---> 03834de86cfc
				Successfully built 03834de86cfc
				Successfully tagged platziapp:latest
# en index.js cambiar BOOM por PUM: corre todo de vuelta
fm@fm:~/Documents/docker/imagenes/docker$ docker build -t platziapp . 
				Sending build context to Docker daemon  118.3kB
				Step 1/6 : FROM node:14
				 ---> 52e5cabe9b9c
				Step 2/6 : COPY [".", "/usr/src/"]
				 ---> c39138a09223
				Step 3/6 : WORKDIR /usr/src
				 ---> Running in 053e91d9005a
				Removing intermediate container 053e91d9005a
				 ---> 48ffe59ec6e5
				Step 4/6 : RUN npm install
				 ---> Running in 0d7c3727e450

				> nodemon@1.18.6 postinstall /usr/src/node_modules/nodemon
				> node bin/postinstall || exit 0

				Love nodemon? You can now support the project via the open collective:
				 > https://opencollective.com/nodemon/donate

				npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.7 (node_modules/fsevents):
				npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.7: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

				added 287 packages from 588 contributors and audited 355 packages in 9.467s
				found 55 vulnerabilities (8 moderate, 30 high, 17 critical)
				  run `npm audit fix` to fix them, or `npm audit` for details
				Removing intermediate container 0d7c3727e450
				 ---> 209b22e53e67
				Step 5/6 : EXPOSE 3000
				 ---> Running in d524e38ebf68
				Removing intermediate container d524e38ebf68
				 ---> 2cbb2636a9c3
				Step 6/6 : CMD ["node", "index.js"]
				 ---> Running in 00bdda9dc153
				Removing intermediate container 00bdda9dc153
				 ---> e883fed2d4f5
				Successfully built e883fed2d4f5
				Successfully tagged platziapp:latest
# en VS code cambia COPY ["package.json", "package-lock.json", "/usr/src/"]
# COPY [".", "/usr/src/"]
fm@fm:~/Documents/docker/imagenes/docker$ docker build -t platziapp . 
				Sending build context to Docker daemon  118.3kB
				Step 1/7 : FROM node:14
				 ---> 52e5cabe9b9c
				Step 2/7 : COPY ["package.json","package-lock.json", "/usr/src/"]
				 ---> 8cd680e6c583
				Step 3/7 : WORKDIR /usr/src
				 ---> Running in d5ccc1f6fdda
				Removing intermediate container d5ccc1f6fdda
				 ---> b7348872dc7b
				Step 4/7 : RUN npm install
				 ---> Running in 0a4056c0d4f1

				> nodemon@1.18.6 postinstall /usr/src/node_modules/nodemon
				> node bin/postinstall || exit 0

				Love nodemon? You can now support the project via the open collective:
				 > https://opencollective.com/nodemon/donate

				npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.7 (node_modules/fsevents):
				npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.7: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

				added 287 packages from 588 contributors and audited 355 packages in 19.737s
				found 55 vulnerabilities (8 moderate, 30 high, 17 critical)
				  run `npm audit fix` to fix them, or `npm audit` for details
				Removing intermediate container 0a4056c0d4f1
				 ---> 326afc851f71
				Step 5/7 : COPY [".", "/usr/src/"]
				 ---> 307abbaa7e4a
				Step 6/7 : EXPOSE 3000
				 ---> Running in 3c46166d16ce
				Removing intermediate container 3c46166d16ce
				 ---> d310a4f8c1c2
				Step 7/7 : CMD ["node", "index.js"]
				 ---> Running in 0c7383f288e6
				Removing intermediate container 0c7383f288e6
				 ---> 9ff84dcafdd9
				Successfully built 9ff84dcafdd9
				Successfully tagged platziapp:latest
# en VS code index.js cambiar PUM por BOOM
fm@fm:~/Documents/docker/imagenes/docker$ docker build -t platziapp . 
				Sending build context to Docker daemon  118.3kB
				Step 1/7 : FROM node:14
				 ---> 52e5cabe9b9c
				Step 2/7 : COPY ["package.json","package-lock.json", "/usr/src/"]
				 ---> Using cache
				 ---> 8cd680e6c583
				Step 3/7 : WORKDIR /usr/src
				 ---> Using cache
				 ---> b7348872dc7b
				Step 4/7 : RUN npm install
				 ---> Using cache
				 ---> 326afc851f71
				Step 5/7 : COPY [".", "/usr/src/"]
				 ---> 547bea4a6f6b
				Step 6/7 : EXPOSE 3000
				 ---> Running in 91066914fab8
				Removing intermediate container 91066914fab8
				 ---> 3ae87e93e698
				Step 7/7 : CMD ["node", "index.js"]
				 ---> Running in aa3e0603ab62
				Removing intermediate container aa3e0603ab62
				 ---> c257aa9dbbb0
				Successfully built c257aa9dbbb0
				Successfully tagged platziapp:latest
# no tener que buildear cada vez que cambiamos algo
# VS code cambia por CMD ["npx", "nodemon", "index.js"]
fm@fm:~/Documents/docker/imagenes/docker$ docker build -t platziapp . 
				Sending build context to Docker daemon  118.3kB
				Step 1/7 : FROM node:14
				 ---> 52e5cabe9b9c
				Step 2/7 : COPY ["package.json","package-lock.json", "/usr/src/"]
				 ---> Using cache
				 ---> 8cd680e6c583
				Step 3/7 : WORKDIR /usr/src
				 ---> Using cache
				 ---> b7348872dc7b
				Step 4/7 : RUN npm install
				 ---> Using cache
				 ---> 326afc851f71
				Step 5/7 : COPY [".", "/usr/src/"]
				 ---> Using cache
				 ---> 547bea4a6f6b
				Step 6/7 : EXPOSE 3000
				 ---> Using cache
				 ---> 3ae87e93e698
				Step 7/7 : CMD ["npx","nodemon", "index.js"]
				 ---> Running in 8b95a530f429
				Removing intermediate container 8b95a530f429
				 ---> 66476b3d6fe7
				Successfully built 66476b3d6fe7
				Successfully tagged platziapp:latest
# arroja error porque estÃ¡ sobre todos los archivos del directorio
fm@fm:~/Documents/docker/imagenes/docker$ docker run --rm -p 3000:3000 -v /home/fm/Documents/docker/imagenes/docker:/usr/src platziapp
				internal/modules/cjs/loader.js:905
				  throw err;
				  ^

				Error: Cannot find module '/root/.npm/_npx/1/lib/node_modules/nodemon/bin/postinstall'
					at Function.Module._resolveFilename (internal/modules/cjs/loader.js:902:15)
					at Function.Module._load (internal/modules/cjs/loader.js:746:27)
					at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:75:12)
					at internal/main/run_main_module.js:17:47 {
				  code: 'MODULE_NOT_FOUND',
				  requireStack: []
				}
				[nodemon] 2.0.19
				[nodemon] to restart at any time, enter `rs`
				[nodemon] watching path(s): *.*
				[nodemon] watching extensions: js,mjs,json
				[nodemon] starting `node index.js`
				internal/modules/cjs/loader.js:905
				  throw err;
				  ^

				Error: Cannot find module 'express'
				Require stack:
				- /usr/src/index.js
					at Function.Module._resolveFilename (internal/modules/cjs/loader.js:902:15)
					at Function.Module._load (internal/modules/cjs/loader.js:746:27)
					at Module.require (internal/modules/cjs/loader.js:974:19)
					at require (internal/modules/cjs/helpers.js:101:18)
					at Object.<anonymous> (/usr/src/index.js:1:17)
					at Module._compile (internal/modules/cjs/loader.js:1085:14)
					at Object.Module._extensions..js (internal/modules/cjs/loader.js:1114:10)
					at Module.load (internal/modules/cjs/loader.js:950:32)
					at Function.Module._load (internal/modules/cjs/loader.js:790:12)
					at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:75:12) {
				  code: 'MODULE_NOT_FOUND',
				  requireStack: [ '/usr/src/index.js' ]
				}
				[nodemon] app crashed - waiting for file changes before starting...
# corre sÃ³lo sobre le archivo index.js para que se actualice dinamicamente con nodemon
^Cfm@fm:~/Documents/docker/imagenes/docker$ docker run --rm -p 3000:3000 -v /home/fm/Documents/docker/imagenes/docker/index.js:/usr/src/index.js platziapp
				[nodemon] 1.18.6
				[nodemon] to restart at any time, enter `rs`
				[nodemon] watching: *.*
				[nodemon] starting `node index.js`
				(node:20) Warning: Accessing non-existent property 'count' of module exports inside circular dependency
				(Use `node --trace-warnings ...` to show where the warning was created)
				(node:20) Warning: Accessing non-existent property 'findOne' of module exports inside circular dependency
				(node:20) Warning: Accessing non-existent property 'remove' of module exports inside circular dependency
				(node:20) Warning: Accessing non-existent property 'updateOne' of module exports inside circular dependency
				Server listening on port 3000!
# en VS code index.js cambiar BOOM por OTRACOSA
fm@fm:~/Documents/docker/imagenes/docker$ docker run --rm -p 3000:3000 -v /home/fm/Documents/docker/imagenes/docker/index.js:/usr/src/index.js platziapp
				[nodemon] 1.18.6
				[nodemon] to restart at any time, enter `rs`
				[nodemon] watching: *.*
				[nodemon] starting `node index.js`
				(node:20) Warning: Accessing non-existent property 'count' of module exports inside circular dependency
				(Use `node --trace-warnings ...` to show where the warning was created)
				(node:20) Warning: Accessing non-existent property 'findOne' of module exports inside circular dependency
				(node:20) Warning: Accessing non-existent property 'remove' of module exports inside circular dependency
				(node:20) Warning: Accessing non-existent property 'updateOne' of module exports inside circular dependency
				Server listening on port 3000!
				[nodemon] restarting due to changes...
				[nodemon] starting `node index.js`
				(node:33) Warning: Accessing non-existent property 'count' of module exports inside circular dependency
				(Use `node --trace-warnings ...` to show where the warning was created)
				(node:33) Warning: Accessing non-existent property 'findOne' of module exports inside circular dependency
				(node:33) Warning: Accessing non-existent property 'remove' of module exports inside circular dependency
				(node:33) Warning: Accessing non-existent property 'updateOne' of module exports inside circular dependency
				Server listening on port 3000!

##################################################################################################################
fm@fm:~/Documents/docker/imagenes/docker$ docker network ls
				NETWORK ID     NAME      DRIVER    SCOPE
				d2bf858c78a5   bridge    bridge    local
				9044d9c875fa   host      host      local
				e8b8530461d3   none      null      local
# permite que otros contenedores se conecten
fm@fm:~/Documents/docker/imagenes/docker$ docker network create --attachable platzinet
				7ee4f32bc3b2335bb396eaa2c05ff62d2b39c134057d05b98d910dbeed91e9ea
fm@fm:~/Documents/docker/imagenes/docker$ docker network inspect platzinet
				[
					{
						"Name": "platzinet",
						"Id": "7ee4f32bc3b2335bb396eaa2c05ff62d2b39c134057d05b98d910dbeed91e9ea",
						"Created": "2022-08-20T21:58:03.691510191-05:00",
						"Scope": "local",
						"Driver": "bridge",
						"EnableIPv6": false,
						"IPAM": {
							"Driver": "default",
							"Options": {},
							"Config": [
								{
									"Subnet": "172.18.0.0/16",
									"Gateway": "172.18.0.1"
								}
							]
						},
						"Internal": false,
						"Attachable": true,
						"Ingress": false,
						"ConfigFrom": {
							"Network": ""
						},
						"ConfigOnly": false,
						"Containers": {},
						"Options": {},
						"Labels": {}
					}
				]
# crea el contenedor de la bd
fm@fm:~/Documents/docker/imagenes/docker$ docker run -d --name db mongo
				ba6d4b331e2400d29cb2d6a92c2535c17e4b594977de33f2e116050b8a5a19f7
#  conectar al contenedor nuevo a esa red
fm@fm:~/Documents/docker/imagenes/docker$ docker network connect platzinet db
fm@fm:~/Documents/docker/imagenes/docker$ docker network inspect platzinet
				[
					{
						"Name": "platzinet",
						"Id": "7ee4f32bc3b2335bb396eaa2c05ff62d2b39c134057d05b98d910dbeed91e9ea",
						"Created": "2022-08-20T21:58:03.691510191-05:00",
						"Scope": "local",
						"Driver": "bridge",
						"EnableIPv6": false,
						"IPAM": {
							"Driver": "default",
							"Options": {},
							"Config": [
								{
									"Subnet": "172.18.0.0/16",
									"Gateway": "172.18.0.1"
								}
							]
						},
						"Internal": false,
						"Attachable": true,
						"Ingress": false,
						"ConfigFrom": {
							"Network": ""
						},
						"ConfigOnly": false,
						"Containers": {
							"ba6d4b331e2400d29cb2d6a92c2535c17e4b594977de33f2e116050b8a5a19f7": {
								"Name": "db",
								"EndpointID": "1a2d26d85a251ac8cbeb233b3a4189c9d1df11b63f42b0886d2fd679ec2b2a91",
								"MacAddress": "02:42:ac:12:00:02",
								"IPv4Address": "172.18.0.2/16",
								"IPv6Address": ""
							}
						},
						"Options": {},
						"Labels": {}
					}
				]
# correr la aplicaciÃ³n conectada a la red
fm@fm:~/Documents/docker/imagenes/docker$ docker run -d --name app -p 3000:3000 --env MONGO_URL=mongodb://db:27017/test platziapp
				42fcf5ee0289fa335f1ddafd98956d46cb7dd55979ccf01bac379e3bc027a1d9
fm@fm:~/Documents/docker/imagenes/docker$ docker ps
				CONTAINER ID   IMAGE       COMMAND                  CREATED          STATUS          PORTS                                       NAMES
				42fcf5ee0289   platziapp   "docker-entrypoint.sâ¦"   6 seconds ago    Up 5 seconds    0.0.0.0:3000->3000/tcp, :::3000->3000/tcp   app
				ba6d4b331e24   mongo       "docker-entrypoint.sâ¦"   42 seconds ago   Up 41 seconds   27017/tcp                                   db
# conectar el contenedor a la red
fm@fm:~/Documents/docker/imagenes/docker$ docker network connect platzinet app
fm@fm:~/Documents/docker/imagenes/docker$ docker network inspect platzinet
				[
					{
						"Name": "platzinet",
						"Id": "7ee4f32bc3b2335bb396eaa2c05ff62d2b39c134057d05b98d910dbeed91e9ea",
						"Created": "2022-08-20T21:58:03.691510191-05:00",
						"Scope": "local",
						"Driver": "bridge",
						"EnableIPv6": false,
						"IPAM": {
							"Driver": "default",
							"Options": {},
							"Config": [
								{
									"Subnet": "172.18.0.0/16",
									"Gateway": "172.18.0.1"
								}
							]
						},
						"Internal": false,
						"Attachable": true,
						"Ingress": false,
						"ConfigFrom": {
							"Network": ""
						},
						"ConfigOnly": false,
						"Containers": {
							"42fcf5ee0289fa335f1ddafd98956d46cb7dd55979ccf01bac379e3bc027a1d9": {
								"Name": "app",
								"EndpointID": "1b14d78250f04a0dd8e4b9210b2c9e5105a488ba2494f16223166dba72200aad",
								"MacAddress": "02:42:ac:12:00:03",
								"IPv4Address": "172.18.0.3/16",
								"IPv6Address": ""
							},
							"ba6d4b331e2400d29cb2d6a92c2535c17e4b594977de33f2e116050b8a5a19f7": {
								"Name": "db",
								"EndpointID": "1a2d26d85a251ac8cbeb233b3a4189c9d1df11b63f42b0886d2fd679ec2b2a91",
								"MacAddress": "02:42:ac:12:00:02",
								"IPv4Address": "172.18.0.2/16",
								"IPv6Address": ""
							}
						},
						"Options": {},
						"Labels": {}
					}
				]
fm@fm:~/Documents/docker/imagenes/docker$ 
# en el navegador localhost:3000
